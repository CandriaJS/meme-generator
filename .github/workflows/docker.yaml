name: 构建并推送镜像

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true


env:
  DOCKERHUB_REPO: shiwuliya/meme-generator
  GHCR_REPO: ghcr.io/candriajs/meme-generator
  ALIYUN_REPO: registry.cn-hangzhou.aliyuncs.com/candriajs/meme-generator

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 获取token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: 检出代码
        uses: actions/checkout@v3

      - name: 登录 Docker 镜像仓库
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 登陆 GitHub 镜像仓库
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: 登陆 ALIYUN 镜像仓库
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: 生成镜像元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GHCR_REPO }}
            ${{ env.ALIYUN_REPO }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern=latest,enable={{is_default_branch}}

      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v3

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
